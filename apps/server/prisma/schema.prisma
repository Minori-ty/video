// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String    @id @default(cuid()) @map("_id") // 用户唯一标识符
    name           String? // 用户名
    email          String    @unique // 电子邮箱,唯一
    password       String // 密码
    firstName      String? // 名
    lastName       String? // 姓
    phoneNumber    String? // 电话号码
    dateOfBirth    DateTime? // 出生日期
    gender         String? // 性别
    address        String? // 地址
    profilePicture String? // 头像URL
    bio            String? // 个人简介
    lastLoginAt    DateTime? // 最后登录时间
    createdAt      DateTime  @default(now()) // 账户创建时间
    updatedAt      DateTime  @updatedAt // 账户信息更新时间
    role           String    @default("USER") // 用户角色,默认为普通用户
    timezone       String? // 时区
    videos         Video[] // 用户上传的视频
}

// 视频状态枚举
enum VideoStatus {
    // 等待处理
    PENDING
    // 处理中
    PROCESSING
    // 处理完成
    READY
    // 处理失败
    ERROR
}

// 视频模型
model Video {
    id          String       @id @default(cuid()) @map("_id") // 视频唯一标识符
    title       String // 视频标题
    description String? // 视频描述
    url         String // 视频文件URL
    coverUrl    String? // 视频封面URL
    duration    Int? // 视频时长(秒)
    size        Int // 视频文件大小(字节)
    mimeType    String // 视频文件类型
    userId      String // 上传用户ID
    user        User         @relation(fields: [userId], references: [id]) // 关联用户
    createdAt   DateTime     @default(now()) // 创建时间
    updatedAt   DateTime     @updatedAt // 更新时间
    // 视频状态
    status      VideoStatus  @default(PENDING)
    // m3u8播放列表URL
    m3u8Url     String?
    // 视频切片
    chunks      VideoChunk[]

    @@index([userId])
}

// 视频切片模型
model VideoChunk {
    // 切片ID
    id        String   @id @default(cuid())
    // 切片索引
    index     Int
    // 切片文件名
    filename  String
    // 切片URL
    url       String
    // 切片时长
    duration  Int
    // 所属视频
    video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
    // 视频ID
    videoId   String
    // 创建时间
    createdAt DateTime @default(now())
    // 更新时间
    updatedAt DateTime @updatedAt

    @@index([videoId])
}
